C:\WINDOWS\system32>mongo --port 27017
MongoDB shell version v4.2.5
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("930c0eab-1fcd-4162-9555-1d4e7da34999") }
MongoDB server version: 4.2.5
Server has startup warnings:
2020-04-17T14:12:43.651+0530 I  CONTROL  [initandlisten]
2020-04-17T14:12:43.651+0530 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2020-04-17T14:12:43.651+0530 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2020-04-17T14:12:43.652+0530 I  CONTROL  [initandlisten]
2020-04-17T14:12:43.652+0530 I  CONTROL  [initandlisten] ** WARNING: This server is bound to localhost.
2020-04-17T14:12:43.652+0530 I  CONTROL  [initandlisten] **          Remote systems will be unable to connect to this server.
2020-04-17T14:12:43.652+0530 I  CONTROL  [initandlisten] **          Start the server with --bind_ip <address> to specify which IP
2020-04-17T14:12:43.652+0530 I  CONTROL  [initandlisten] **          addresses it should serve responses from, or with --bind_ip_all to
2020-04-17T14:12:43.652+0530 I  CONTROL  [initandlisten] **          bind to all interfaces. If this behavior is desired, start the
2020-04-17T14:12:43.652+0530 I  CONTROL  [initandlisten] **          server with --bind_ip 127.0.0.1 to disable this warning.
2020-04-17T14:12:43.653+0530 I  CONTROL  [initandlisten]
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> show dbs
2020-04-17T14:15:52.000+0530 E  QUERY    [js] uncaught exception: Error: listDatabases failed:{
        "operationTime" : Timestamp(0, 0),
        "ok" : 0,
        "errmsg" : "not master and slaveOk=false",
        "code" : 13435,
        "codeName" : "NotMasterNoSlaveOk",
        "$clusterTime" : {
                "clusterTime" : Timestamp(0, 0),
                "signature" : {
                        "hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        "keyId" : NumberLong(0)
                }
        }
} :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
Mongo.prototype.getDBs/<@src/mongo/shell/mongo.js:135:19
Mongo.prototype.getDBs@src/mongo/shell/mongo.js:87:12
shellHelper.show@src/mongo/shell/utils.js:906:13
shellHelper@src/mongo/shell/utils.js:790:15
@(shellhelp2):1:1
> rsconf={_id:"nikhil",members:[{_id:0,host:"localhost:27017"}]}
{
        "_id" : "nikhil",
        "members" : [
                {
                        "_id" : 0,
                        "host" : "localhost:27017"
                }
        ]
}
> rs,initiate(rsconf)
2020-04-17T14:22:02.553+0530 E  QUERY    [js] uncaught exception: ReferenceError: initiate is not defined :
@(shell):1:4
> rs.initiate(rsconf)
{
        "ok" : 1,
        "$clusterTime" : {
                "clusterTime" : Timestamp(1587113529, 1),
                "signature" : {
                        "hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        "keyId" : NumberLong(0)
                }
        },
        "operationTime" : Timestamp(1587113529, 1)
}
nikhil:OTHER>
nikhil:PRIMARY> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
nikhil:PRIMARY> rs.add("localhost:27020")
{
        "ok" : 1,
        "$clusterTime" : {
                "clusterTime" : Timestamp(1587114372, 1),
                "signature" : {
                        "hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        "keyId" : NumberLong(0)
                }
        },
        "operationTime" : Timestamp(1587114372, 1)
}
nikhil:PRIMARY> rs.status()
{
        "set" : "nikhil",
        "date" : ISODate("2020-04-17T09:06:28.584Z"),
        "myState" : 1,
        "term" : NumberLong(1),
        "syncingTo" : "",
        "syncSourceHost" : "",
        "syncSourceId" : -1,
        "heartbeatIntervalMillis" : NumberLong(2000),
        "majorityVoteCount" : 2,
        "writeMajorityCount" : 2,
        "optimes" : {
                "lastCommittedOpTime" : {
                        "ts" : Timestamp(1587114372, 1),
                        "t" : NumberLong(1)
                },
                "lastCommittedWallTime" : ISODate("2020-04-17T09:06:12.551Z"),
                "readConcernMajorityOpTime" : {
                        "ts" : Timestamp(1587114372, 1),
                        "t" : NumberLong(1)
                },
                "readConcernMajorityWallTime" : ISODate("2020-04-17T09:06:12.551Z"),
                "appliedOpTime" : {
                        "ts" : Timestamp(1587114372, 1),
                        "t" : NumberLong(1)
                },
                "durableOpTime" : {
                        "ts" : Timestamp(1587114372, 1),
                        "t" : NumberLong(1)
                },
                "lastAppliedWallTime" : ISODate("2020-04-17T09:06:12.551Z"),
                "lastDurableWallTime" : ISODate("2020-04-17T09:06:12.551Z")
        },
        "lastStableRecoveryTimestamp" : Timestamp(1587114369, 1),
        "lastStableCheckpointTimestamp" : Timestamp(1587114369, 1),
        "electionCandidateMetrics" : {
                "lastElectionReason" : "electionTimeout",
                "lastElectionDate" : ISODate("2020-04-17T08:52:09.665Z"),
                "electionTerm" : NumberLong(1),
                "lastCommittedOpTimeAtElection" : {
                        "ts" : Timestamp(0, 0),
                        "t" : NumberLong(-1)
                },
                "lastSeenOpTimeAtElection" : {
                        "ts" : Timestamp(1587113529, 1),
                        "t" : NumberLong(-1)
                },
                "numVotesNeeded" : 1,
                "priorityAtElection" : 1,
                "electionTimeoutMillis" : NumberLong(10000),
                "newTermStartDate" : ISODate("2020-04-17T08:52:09.811Z"),
                "wMajorityWriteAvailabilityDate" : ISODate("2020-04-17T08:52:09.887Z")
        },
        "members" : [
                {
                        "_id" : 0,
                        "name" : "localhost:27017",
                        "health" : 1,
                        "state" : 1,
                        "stateStr" : "PRIMARY",
                        "uptime" : 1426,
                        "optime" : {
                                "ts" : Timestamp(1587114372, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDate" : ISODate("2020-04-17T09:06:12Z"),
                        "syncingTo" : "",
                        "syncSourceHost" : "",
                        "syncSourceId" : -1,
                        "infoMessage" : "",
                        "electionTime" : Timestamp(1587113529, 2),
                        "electionDate" : ISODate("2020-04-17T08:52:09Z"),
                        "configVersion" : 2,
                        "self" : true,
                        "lastHeartbeatMessage" : ""
                },
                {
                        "_id" : 1,
                        "name" : "localhost:27020",
                        "health" : 1,
                        "state" : 2,
                        "stateStr" : "SECONDARY",
                        "uptime" : 16,
                        "optime" : {
                                "ts" : Timestamp(1587114372, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDurable" : {
                                "ts" : Timestamp(1587114372, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDate" : ISODate("2020-04-17T09:06:12Z"),
                        "optimeDurableDate" : ISODate("2020-04-17T09:06:12Z"),
                        "lastHeartbeat" : ISODate("2020-04-17T09:06:28.560Z"),
                        "lastHeartbeatRecv" : ISODate("2020-04-17T09:06:28.404Z"),
                        "pingMs" : NumberLong(0),
                        "lastHeartbeatMessage" : "",
                        "syncingTo" : "",
                        "syncSourceHost" : "",
                        "syncSourceId" : -1,
                        "infoMessage" : "",
                        "configVersion" : 2
                }
        ],
        "ok" : 1,
        "$clusterTime" : {
                "clusterTime" : Timestamp(1587114372, 1),
                "signature" : {
                        "hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        "keyId" : NumberLong(0)
                }
        },
        "operationTime" : Timestamp(1587114372, 1)
}
nikhil:PRIMARY> rs.add("localhost:27021")
{
        "ok" : 1,
        "$clusterTime" : {
                "clusterTime" : Timestamp(1587114491, 1),
                "signature" : {
                        "hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        "keyId" : NumberLong(0)
                }
        },
        "operationTime" : Timestamp(1587114491, 1)
}
nikhil:PRIMARY> rs.status()
{
        "set" : "nikhil",
        "date" : ISODate("2020-04-17T09:08:16.823Z"),
        "myState" : 1,
        "term" : NumberLong(1),
        "syncingTo" : "",
        "syncSourceHost" : "",
        "syncSourceId" : -1,
        "heartbeatIntervalMillis" : NumberLong(2000),
        "majorityVoteCount" : 2,
        "writeMajorityCount" : 2,
        "optimes" : {
                "lastCommittedOpTime" : {
                        "ts" : Timestamp(1587114491, 1),
                        "t" : NumberLong(1)
                },
                "lastCommittedWallTime" : ISODate("2020-04-17T09:08:11.351Z"),
                "readConcernMajorityOpTime" : {
                        "ts" : Timestamp(1587114491, 1),
                        "t" : NumberLong(1)
                },
                "readConcernMajorityWallTime" : ISODate("2020-04-17T09:08:11.351Z"),
                "appliedOpTime" : {
                        "ts" : Timestamp(1587114491, 1),
                        "t" : NumberLong(1)
                },
                "durableOpTime" : {
                        "ts" : Timestamp(1587114491, 1),
                        "t" : NumberLong(1)
                },
                "lastAppliedWallTime" : ISODate("2020-04-17T09:08:11.351Z"),
                "lastDurableWallTime" : ISODate("2020-04-17T09:08:11.351Z")
        },
        "lastStableRecoveryTimestamp" : Timestamp(1587114429, 1),
        "lastStableCheckpointTimestamp" : Timestamp(1587114429, 1),
        "electionCandidateMetrics" : {
                "lastElectionReason" : "electionTimeout",
                "lastElectionDate" : ISODate("2020-04-17T08:52:09.665Z"),
                "electionTerm" : NumberLong(1),
                "lastCommittedOpTimeAtElection" : {
                        "ts" : Timestamp(0, 0),
                        "t" : NumberLong(-1)
                },
                "lastSeenOpTimeAtElection" : {
                        "ts" : Timestamp(1587113529, 1),
                        "t" : NumberLong(-1)
                },
                "numVotesNeeded" : 1,
                "priorityAtElection" : 1,
                "electionTimeoutMillis" : NumberLong(10000),
                "newTermStartDate" : ISODate("2020-04-17T08:52:09.811Z"),
                "wMajorityWriteAvailabilityDate" : ISODate("2020-04-17T08:52:09.887Z")
        },
        "members" : [
                {
                        "_id" : 0,
                        "name" : "localhost:27017",
                        "health" : 1,
                        "state" : 1,
                        "stateStr" : "PRIMARY",
                        "uptime" : 1534,
                        "optime" : {
                                "ts" : Timestamp(1587114491, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDate" : ISODate("2020-04-17T09:08:11Z"),
                        "syncingTo" : "",
                        "syncSourceHost" : "",
                        "syncSourceId" : -1,
                        "infoMessage" : "",
                        "electionTime" : Timestamp(1587113529, 2),
                        "electionDate" : ISODate("2020-04-17T08:52:09Z"),
                        "configVersion" : 3,
                        "self" : true,
                        "lastHeartbeatMessage" : ""
                },
                {
                        "_id" : 1,
                        "name" : "localhost:27020",
                        "health" : 1,
                        "state" : 2,
                        "stateStr" : "SECONDARY",
                        "uptime" : 124,
                        "optime" : {
                                "ts" : Timestamp(1587114491, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDurable" : {
                                "ts" : Timestamp(1587114491, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDate" : ISODate("2020-04-17T09:08:11Z"),
                        "optimeDurableDate" : ISODate("2020-04-17T09:08:11Z"),
                        "lastHeartbeat" : ISODate("2020-04-17T09:08:15.352Z"),
                        "lastHeartbeatRecv" : ISODate("2020-04-17T09:08:15.365Z"),
                        "pingMs" : NumberLong(0),
                        "lastHeartbeatMessage" : "",
                        "syncingTo" : "localhost:27017",
                        "syncSourceHost" : "localhost:27017",
                        "syncSourceId" : 0,
                        "infoMessage" : "",
                        "configVersion" : 3
                },
                {
                        "_id" : 2,
                        "name" : "localhost:27021",
                        "health" : 1,
                        "state" : 2,
                        "stateStr" : "SECONDARY",
                        "uptime" : 5,
                        "optime" : {
                                "ts" : Timestamp(1587114491, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDurable" : {
                                "ts" : Timestamp(1587114491, 1),
                                "t" : NumberLong(1)
                        },
                        "optimeDate" : ISODate("2020-04-17T09:08:11Z"),
                        "optimeDurableDate" : ISODate("2020-04-17T09:08:11Z"),
                        "lastHeartbeat" : ISODate("2020-04-17T09:08:15.358Z"),
                        "lastHeartbeatRecv" : ISODate("2020-04-17T09:08:16.495Z"),
                        "pingMs" : NumberLong(0),
                        "lastHeartbeatMessage" : "",
                        "syncingTo" : "",
                        "syncSourceHost" : "",
                        "syncSourceId" : -1,
                        "infoMessage" : "",
                        "configVersion" : 3
                }
        ],
        "ok" : 1,
        "$clusterTime" : {
                "clusterTime" : Timestamp(1587114491, 1),
                "signature" : {
                        "hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        "keyId" : NumberLong(0)
                }
        },
        "operationTime" : Timestamp(1587114491, 1)
}
nikhil:PRIMARY> use ecom
switched to db ecom
nikhil:PRIMARY> db.test.insert({name:"nikhil Soni",age:21})
WriteResult({ "nInserted" : 1 })
nikhil:PRIMARY>

-----------------------------------------------------------------------------------------------------------------------

C:\WINDOWS\system32>mongo --port 27020
MongoDB shell version v4.2.5
connecting to: mongodb://127.0.0.1:27020/?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("783f60eb-6fa5-408d-bb60-2767f3747aa8") }
MongoDB server version: 4.2.5
Server has startup warnings:
2020-04-17T14:31:40.865+0530 I  CONTROL  [initandlisten]
2020-04-17T14:31:40.865+0530 I  CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2020-04-17T14:31:40.866+0530 I  CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2020-04-17T14:31:40.866+0530 I  CONTROL  [initandlisten]
2020-04-17T14:31:40.866+0530 I  CONTROL  [initandlisten] ** WARNING: This server is bound to localhost.
2020-04-17T14:31:40.866+0530 I  CONTROL  [initandlisten] **          Remote systems will be unable to connect to this server.
2020-04-17T14:31:40.866+0530 I  CONTROL  [initandlisten] **          Start the server with --bind_ip <address> to specify which IP
2020-04-17T14:31:40.866+0530 I  CONTROL  [initandlisten] **          addresses it should serve responses from, or with --bind_ip_all to
2020-04-17T14:31:40.866+0530 I  CONTROL  [initandlisten] **          bind to all interfaces. If this behavior is desired, start the
2020-04-17T14:31:40.867+0530 I  CONTROL  [initandlisten] **          server with --bind_ip 127.0.0.1 to disable this warning.
2020-04-17T14:31:40.867+0530 I  CONTROL  [initandlisten]
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

nikhil:SECONDARY> show dbs
2020-04-17T14:45:56.227+0530 E  QUERY    [js] uncaught exception: Error: listDatabases failed:{
        "operationTime" : Timestamp(1587114949, 1),
        "ok" : 0,
        "errmsg" : "not master and slaveOk=false",
        "code" : 13435,
        "codeName" : "NotMasterNoSlaveOk",
        "$clusterTime" : {
                "clusterTime" : Timestamp(1587114949, 1),
                "signature" : {
                        "hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),
                        "keyId" : NumberLong(0)
                }
        }
} :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
Mongo.prototype.getDBs/<@src/mongo/shell/mongo.js:135:19
Mongo.prototype.getDBs@src/mongo/shell/mongo.js:87:12
shellHelper.show@src/mongo/shell/utils.js:906:13
shellHelper@src/mongo/shell/utils.js:790:15
@(shellhelp2):1:1
nikhil:SECONDARY> rs.slaveOk()
nikhil:SECONDARY> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
nikhil:SECONDARY>
























































































































































